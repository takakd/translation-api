apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-configmap
  namespace: retrans
data:
  envoy.yaml: |
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }

    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 9000 }
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/" }
                    route:
                      cluster: service_cluster
                      max_grpc_timeout: 0s
                  cors:
                    allow_origin_string_match:
                    - prefix: "*"
                    allow_methods: GET, PUT, DELETE, POST, OPTIONS
                    allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                    max_age: "1728000"
                    expose_headers: custom-header-1,grpc-status,grpc-message
              http_filters:
              - name: envoy.filters.http.grpc_web
              - name: envoy.filters.http.cors-ingress
              - name: envoy.filters.http.router
      clusters:
      - name: service_cluster
        connect_timeout: 0.5s
        type: strict_dns
        http2_protocol_options: {}
        lb_policy: round_robin
        load_assignment:
          cluster_name: service_cluster
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: retrans-api-service
                        port_value: 50051

---
apiVersion: v1
kind: Service
metadata:
  name: retrans-envoy-service
  namespace: retrans
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#    external-dns.alpha.kubernetes.io/hostname: proxy.grpc.example.com
  labels:
    app: retrans-envoy
spec:
  sessionAffinity: None
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: envoy-admin
    port: 9901
    targetPort: envoy-admin
    protocol: TCP
  selector:
    app: retrans-envoy

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: retrans-enovy-deploy
  labels:
    app: retrans-envoy
  namespace: retrans
spec:
  replicas: 1
  selector:
    matchLabels:
      app: retrans-envoy
  template:
    metadata:
      labels:
        app: retrans-envoy
    spec:
      containers:
        - name: envoy-envoy-pod
          image: envoyproxy/envoy:v1.16.1
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 9000
            - name: envoy-admin
              containerPort: 9901
          volumeMounts:
            - name: config
              mountPath: /etc/envoy
      volumes:
        - name: config
          configMap:
            name: envoy-configmap
